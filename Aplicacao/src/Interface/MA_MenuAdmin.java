/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import BusinessLayer.Componente;
import BusinessLayer.ConfiguraFacil;
import BusinessLayer.Configuracao;
import BusinessLayer.Funcionario;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;


public class MA_MenuAdmin extends JFrame implements Observer {

    private ConfiguraFacil cfacil;
    private MA_NovoFuncionario novoFuncionario;
    private Login login;
    /**
     * Creates new form MenuAdmin_2
     */
    public MA_MenuAdmin(ConfiguraFacil cfacil) {
        initComponents();
        this.cfacil=cfacil;
        this.cfacil.addObserver(this); //o modelo (objecto cfacil) é observado pelo objecto MenuAdmin
        this.cfacil.fabricoConfig();
        update(cfacil, this);
    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabFuncionarios = new javax.swing.JTable();
        Adicionar = new javax.swing.JButton();
        remover = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabComponentes = new javax.swing.JTable();
        atualizar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TabConfigs = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TabProducao = new javax.swing.JTable();
        confirmaProducao = new javax.swing.JButton();
        logout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(300, 100, 0, 0));

        TabFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TabFuncionarios);

        Adicionar.setText("Adicionar");
        Adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdicionarActionPerformed(evt);
            }
        });

        remover.setText("Remover");
        remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(remover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Adicionar, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(Adicionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(remover)
                .addContainerGap(258, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Funcionários", jPanel1);

        TabComponentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descrição", "Quantidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TabComponentes);
        if (TabComponentes.getColumnModel().getColumnCount() > 0) {
            TabComponentes.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        atualizar.setText("Atualizar");
        atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(atualizar)
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(atualizar)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Stock", jPanel2);

        TabConfigs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Config", "NIF CLiente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TabConfigs);
        if (TabConfigs.getColumnModel().getColumnCount() > 0) {
            TabConfigs.getColumnModel().getColumn(0).setPreferredWidth(2);
            TabConfigs.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        jLabel1.setText("Lista Configurações");

        jLabel2.setText("Veículos que podem ser Produzidos");

        TabProducao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Config"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(TabProducao);

        confirmaProducao.setText("Confirmar Produção");
        confirmaProducao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmaProducaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(confirmaProducao)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(jLabel1)
                                .addGap(60, 60, 60))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))))
                .addGap(0, 31, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(confirmaProducao)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Configurações", jPanel3);

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdicionarActionPerformed
        novoFuncionario = new MA_NovoFuncionario(cfacil);
        novoFuncionario.setTitle("Novo Funcionário");
        novoFuncionario.setVisible(true);
    }//GEN-LAST:event_AdicionarActionPerformed

    private void removerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerActionPerformed
        int nrLinhaSelect = TabFuncionarios.getSelectedRow();
        
        if(nrLinhaSelect<0)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor selecione um funcionário.", "Seleção de funcionário", 0);
        }
        else
        {
            String idFuncionario = (String) TabFuncionarios.getValueAt(nrLinhaSelect, 0);
            
            try {

                this.cfacil.removeFuncionario(idFuncionario);
            } catch (SQLException ex) {
                Logger.getLogger(MA_MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_removerActionPerformed

    private void atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarActionPerformed
        MA_AtualizarStock atualizarStock;
        
        int nrLinhaSelect = TabComponentes.getSelectedRow();
        
        if(nrLinhaSelect<0)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor selecione um componente.", "Seleção de componente", 0);
        }
        else
        {
            int idComponenteSelect = (int) TabComponentes.getValueAt(nrLinhaSelect, 0);
            int qtAtual = (int) TabComponentes.getValueAt(nrLinhaSelect, 2);
            
           
               atualizarStock = new MA_AtualizarStock(this.cfacil, idComponenteSelect, qtAtual);
               atualizarStock.setTitle("Editar Stock Componente");
               atualizarStock.setVisible(true);
               
               
               
        }
    }//GEN-LAST:event_atualizarActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed

        login = new Login();
        login.setTitle("Login");
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void confirmaProducaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmaProducaoActionPerformed
        this.cfacil.confirmaProducao();
        update(cfacil, this);
    }//GEN-LAST:event_confirmaProducaoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Adicionar;
    private javax.swing.JTable TabComponentes;
    private javax.swing.JTable TabConfigs;
    private javax.swing.JTable TabFuncionarios;
    private javax.swing.JTable TabProducao;
    private javax.swing.JButton atualizar;
    private javax.swing.JButton confirmaProducao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton logout;
    private javax.swing.JButton remover;
    // End of variables declaration//GEN-END:variables

    public void update(Observable observable, Object obj) {
        
        clearTableFuncionário();
        for(Funcionario f: cfacil.getFuncionarios().values()) {
            updateTableFuncionario(f.getUsername(), f.getNome());
        }
        
        clearTableComponente();
        for(Componente c: cfacil.getComponentes().values()) {
            updateTableComponente(c.getIdComponente(), c.getDesignacaoComp(), c.getStock());
        }
        
        clearTableConfig();
        for(Configuracao cf: cfacil.getConfiguracoes().values()) {
            updateTableConfig(cf.getIdConfig(), cf.getNifCliente());
        }
        
        clearTableProducao();
        for(int cfp: cfacil.getListaProducaoTemp()) {
            updateTableProducao(cfp);
        }
          
    }   
    
    private void clearTableFuncionário() {
        
        DefaultTableModel model = (DefaultTableModel) TabFuncionarios.getModel();
        
        model.setRowCount(0);
    
    } 
    
    private void updateTableFuncionario(String idFuncionario, String nome) {
        
        DefaultTableModel model = (DefaultTableModel) TabFuncionarios.getModel();
        
        Object rowData[] = new Object[2];
        rowData[0] = idFuncionario;
        rowData[1] = nome;
        model.addRow(rowData); 
    
    }
    
    private void clearTableComponente() {
        
        DefaultTableModel model = (DefaultTableModel) TabComponentes.getModel();
        
        model.setRowCount(0);
    } 
    
    private void updateTableComponente(int idComponente, String designacaoComp, int stock) {
        
        DefaultTableModel model = (DefaultTableModel) TabComponentes.getModel();
        
        Object rowData[] = new Object[3];
        rowData[0] = idComponente;
        rowData[1] = designacaoComp;
        rowData[2] = stock;
        model.addRow(rowData); 
    }
    
    private void clearTableConfig() {
        
        DefaultTableModel model = (DefaultTableModel) TabConfigs.getModel();
        
        model.setRowCount(0);
    } 
    
    private void updateTableConfig(int idConfig, String nif) {
        
        DefaultTableModel model = (DefaultTableModel) TabConfigs.getModel();
        
        Object rowData[] = new Object[2];
        rowData[0] = idConfig;
        rowData[1] = nif;
        model.addRow(rowData); 
    }
    
    private void clearTableProducao() {
        
        DefaultTableModel model = (DefaultTableModel) TabProducao.getModel();
        
        model.setRowCount(0);
    } 
    
    private void updateTableProducao(int idConfig) {
        
        DefaultTableModel model = (DefaultTableModel) TabProducao.getModel();
        
        Object rowData[] = new Object[1];
        rowData[0] = idConfig;
        model.addRow(rowData); 
    }
}
